---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.svelte";
import Button from "../components/Button.svelte";
import "../global.css";
import VideoSection from "../components/VideoSection.svelte";
import {
  ChartBar,
  Calculator,
  Factory,
  PackageCheck,
  Receipt,
  ShoppingCart,
  Store,
  Truck,
  ArrowRight,
  type Icon,
  PlayCircle
} from "@lucide/svelte";
import rocket from "../assets/rocket.svg";
// import Stats from "@/components/Stats";
import hero from "../assets/hero.jpg";
import ImageCard from "../components/ImageCard.svelte";
import HiW from "@/components/HiW";
import CategoryCard from "@/components/CategoryCard.svelte";

interface ComplianceCategory {
  iconName: string;
  title: string;
  description: string;
}

const complianceCategories: ComplianceCategory[] = [
  {
    iconName: "Receipt",
    title: "Indirect Tax",
    description: "Manage VAT, GST, and sales tax compliance requirements.",
  },
  {
    iconName: "ChartBar",
    title: "Finance",
    description: "Streamline financial reporting compliance.",
  },
  {
    iconName: "PackageCheck",
    title: "Customs & Excise",
    description: "Simplify cross-border trade compliance.",
  },
  {
    iconName: "Truck",
    title: "Logistics & Supply Chain",
    description: "Ensure compliance across global supply chains.",
  },
  {
    iconName: "ShoppingCart",
    title: "Procurement",
    description: "Maintain vendor compliance standards.",
  },
  {
    iconName: "Factory",
    title: "Manufacturing",
    description: "Streamline product compliance and certification processes.",
  },
  {
    iconName: "Calculator",
    title: "Direct Tax",
    description: "Simplify income and corporate tax compliance.",
  },
  {
    iconName: "Store",
    title: "Sales & Distribution",
    description: "Manage documentation, compliance, and distribution.",
  },
];

const insightPacks = [
  {
    title: "Essentials",
    description: "Core compliance monitoring for immediate visibility.",
    points: ["Basic tax gap analysis", "Standard compliance alerts"],
  },
  {
    title: "Pro",
    description: "Advanced analytics for proactive management.",
    points: ["Detailed risk scoring", "Process efficiency metrics"],
  },
  {
    title: "Premium",
    description: "Strategic intelligence for process optimization.",
    points: ["Predictive compliance modeling", "Executive dashboards"],
  },
];
---

<Layout>
  <div class="w-full mb-0 flex flex-col mt-16 lg:mt-0 h-[calc(100%-64px)]">
    <Hero client:load />
    <!-- <Marquee client:only="react" className="flex-shrink-0">
      <img
        alt="Transistor"
        src="https://tailwindcss.com/plus-assets/img/logos/158x48/transistor-logo-gray-900.svg"
        width={158}
        height={48}
        class="col-span-2 max-h-12 w-full object-contain lg:col-span-1"
      />
      <img
        alt="Reform"
        src="https://tailwindcss.com/plus-assets/img/logos/158x48/reform-logo-gray-900.svg"
        width={158}
        height={48}
        class="col-span-2 max-h-12 w-full object-contain lg:col-span-1"
      />
      <img
        alt="Tuple"
        src="https://tailwindcss.com/plus-assets/img/logos/158x48/tuple-logo-gray-900.svg"
        width={158}
        height={48}
        class="col-span-2 max-h-12 w-full object-contain lg:col-span-1"
      />
      <img
        alt="SavvyCal"
        src="https://tailwindcss.com/plus-assets/img/logos/158x48/savvycal-logo-gray-900.svg"
        width={158}
        height={48}
        class="col-span-2 max-h-12 w-full object-contain sm:col-start-2 lg:col-span-1"
      />
      <img
        alt="Statamic"
        src="https://tailwindcss.com/plus-assets/img/logos/158x48/statamic-logo-gray-900.svg"
        width={158}
        height={48}
        class="col-span-2 col-start-2 max-h-12 w-full object-contain sm:col-start-auto lg:col-span-1 mr-12"
      />
    </Marquee> -->
  </div>

  <div class="bg-[whitesmoke] lg:p-16">
    <section class="h-full lg:bg-[whitesmoke] bg-blue-700 rounded-t-xl">
      <div class="relative bg-blue-700 lg:rounded-t-xl">
        <div class="flex w-full flex-col">
          <div
            class="h-full gap-x-16 p-4 pb-12 lg:p-20 lg:pr-8 !text-white bg-blue-700 rounded-t-xl"
          >
            <h1
              class="text-xl text-center lg:text-left lg:text-4xl font-bold mt-4 lg:mt-0"
            >
              Velocity
              <span class="font-thin mx-3">|</span>
              <span class="font-thin italic">A Taxera Product</span>
            </h1>
            <div class="w-full flex flex-col md:justify-center items-center gap-y-4">
              <h2 class="lg:text-2xl text-xl font-thin p-6 pb-0 text-balance">
                Taxera's eCompliance delivers rapid integration by providing data,
                emphasizing speed and leveraging intelligent analysis to detect
                compliance issues.
              </h2>
              <h2
                class="lg:text-2xl text-xl font-thin p-6 pt-4 text-balance mb-12"
              >
                Clear visualizations and actionable intelligence across all
                transactions are provided while highlighting priority concerns
                requiring immediate attention.
              </h2>
              <VideoSection
                buttonText="You'll never look back"
                textColor="white"
                className="whitespace-nowrap mx-auto rounded-full lg:ml-4 h-min px-6 pl-12 justify-center items-center text-sm lg:text-lg"
                client:load
                playbackId={"xxuxzinweRsofXLzHkQTloZl01neur3P8adgrqg1SdJI"}
                text="Need some help deciding if Taxera's eCompliance solution is right for you?"
              />
            </div>
          </div>
        </div>
      </div>
      <section class="bg-blue-700 rounded-b-xl h-full p-6 md:p-12">
        <div class="flex rounded-b-xl justify-center items-center">
          <div class="pt-0 flex rounded-b-xl p-4">
            <div
              class="flex flex-col md:grid xl:grid-cols-4 gap-4 w-full h-full lg:grid-cols-2 text-balance rounded-b-xl bg-blue-700 justify-center items-center"
            >
              {
                complianceCategories.map((el, i) => {
                  return (
                    <CategoryCard withVideo={i === 0} title={el.title} description={el.description} iconName={el.iconName} client:load>
                      <PlayCircle class="w-6 h-6"/>
                    </CategoryCard>
                  );
                })
              }
            </div>
          </div>
        </div>
      </section>
    </section>
    <section class="h-full w-full bg-[whitesmoke]">
      <div class="gap-x-4 flex flex-col justify-center items-center">
        <div class="col-span-3 w-full">
          <h1 class="text-center text-6xl font-thin pt-12">Insight Packs</h1>
          <h2
            class="text-left md:text-center text-balance lg:text-2xl text-lg font-thin max-w-7xl p-6 mx-auto pt-6 mb-12"
          >
            Insight Packs deliver instant, business-ready KPIs â€” giving you a
            clear view from global performance down to company code and
            transaction-level detail. Pick the plan that fits your size, scale,
            and ambition.
          </h2>
          <div
            class="flex my-4 lg:flex-row flex-col justify-center items-center gap-x-4 gap-y-4 font-thin"
          >
            <p class="lg:text-2xl text-xl">Want the full picture?</p>
            <a
              href={"https://fefgnmac41fborlf.public.blob.vercel-storage.com/Taxera-eCompliance-zQBDOn4VJr8pF8wNbyaFLNdS0pmvnL.pdf"}
              download
            >
              <Button
                textColor="white"
                text="Find my pack"
                className="lg:w-[16rem] px-6 h-[2rem] rounded-full"
                icon={ArrowRight}
              />
            </a>
          </div>
        </div>
        <div
          class="col-span-3 flex flex-col lg:gap-y-8 lg:flex-row lg:gap-x-4 mx-6 lg:mx-0"
        >
          {
            insightPacks.map((el) => {
              return (
                <div class="relative flex flex-col md:flex-row items-end justify-end p-12 rounded-lg text-white mt-12 aspect-square">
                  <div class="absolute inset-0">
                    <ImageCard client:load img={hero.src} />
                  </div>
                  <div class="flex justify-center items-center absolute -top-3 -right-3 bg-[whitesmoke] rounded-full h-[60px] w-[60px] z-50">
                    <div class="bg-blue-700 text-[whitesmoke] text-md rounded-full p-5">
                      {/* <ArrowRight class="hover:cursor-pointer hover:scale-110 transition-all duration-300 hover:translate-x-1" /> */}
                    </div>
                  </div>
                  <div class="relative">
                    <h1 class="text-5xl">{el.title}</h1>
                    <p class="text-lg text-balance">{el.description}</p>
                    <ul class="flex flex-col gap-x-4 pt-4 text-lg list-disc">
                      {el.points.map((point: string) => {
                        return <li class="text-sm">{point}</li>;
                      })}
                    </ul>
                  </div>
                </div>
              );
            })
          }
        </div>
      </div>
    </section>
    <section
      class="flex justify-center mx-auto h-full w-full m-24 mb-0 xl:mr-0 xl:ml-0 bg-[whitesmoke]"
    >
      <aside
        class="flex lg:flex-row flex-col w-full m-6 lg:m-24 lg:mb-0 xl:pl-12 rounded-xl bg-white h-full relative shadow-blue-700 shadow-2xl overflow-visible"
      >
        <div class="max-w-4xl flex flex-col items-center justify-center lg:p-12 p-6">
          <div class="relative flex flex-col">
            <div
              class="relative -top-20 lg:-left-46 py-3 pl-6 pr-12 flex flex-col items-center font-bold text-white bg-blue-700 shadow-2xl lg:p-12 rounded-lg lg:w-[30rem]"
            >
              <div>
                <h1 class="lg:text-6xl text-4xl">Velocity</h1>
                <p
                  class="lg:text-3xl text-xl font-thin text-balance text-right relative"
                >
                  by Taxera
                </p>
              </div>
            </div>
          </div>
          <div class="h-full w-full relative flex flex-col">
            <div class="flex flex-col gap-y-8 md:pl-12">
              <h1
                class="text-left text-2xl md:text-4xl lg:text-5xl font-bold text-blue-700"
              >
                There's no going back.
              </h1>
              <VideoSection
                className="!h-[4rem] rounded-xl font-bold"
                buttonBgColor="blue-700"
                client:load
                playbackId={"xxuxzinweRsofXLzHkQTloZl01neur3P8adgrqg1SdJI"}
                textColor="white"
                buttonText="Blast off"
              />
            </div>
          </div>
        </div>
        <img
          src={rocket.src}
          alt="Blast-off illustration"
          class="w-2/4 lg:max-w-none max-w-[66%] absolute -right-6 -bottom-6 md:top-12 lg:right-0 lg:-bottom-0 drop-shadow-2xl"
        />
      </aside>
    </section>
    <section
      id="how-it-works"
      class="flex justify-center items-center bg-[whitesmoke] md:mt-52 mt-48 flex-col gap-y-8"
    >
      <h2 class="text-2xl font-thin pb-12 px-12 text-center md:text-3xl">
        We win when you win. That's why we've built an intuitive platform that
        <span class="italic text-blue-700">just works</span>.
      </h2>
      <h2 class="text-2xl font-regular italic text-blue-700">
        Four steps for success
      </h2>
      <HiW client:load />
    </section>

    <!-- <section>
      <Stats />
    </section> -->
  </div>
  <script>
    const playButton = document.getElementById("play-button-0");
    const videoSection = document.getElementById("video-section-0");

    if (playButton && videoSection) {
      // Find the button within the VideoSection component that likely triggers the modal/player
      const videoTrigger = videoSection.querySelector("button");

      playButton.addEventListener("click", (event) => {
        event.stopPropagation(); // Prevent the click from bubbling up if needed
        // Click the trigger inside VideoSection, or the component itself as a fallback
        if (videoTrigger) {
          videoTrigger.click();
        } else {
          videoSection.click(); // Fallback if no button found inside
        }
      });
    }
  </script>
</Layout>
